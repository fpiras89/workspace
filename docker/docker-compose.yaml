name: workspace

services:
  keycloak:
    image: keycloak
    container_name: keycloak
    build:
      context: .
      dockerfile: keycloak/Dockerfile
    #command: ["start", "--optimized"]
    command: ["start-dev", "--tracing-enabled=true", "--features=opentelemetry"]
    ports:
      - 9000:9000
      - 8080:8080
      - 8443:8443
    environment:
      KC_DB: mssql
      KC_DB_URL_DATABASE: keycloak
      KC_DB_URL_HOST: mssql
      KC_DB_URL_PORT: 1433
      KC_DB_URL_PROPERTIES: ";trustServerCertificate=false;encrypt=false"
      KC_DB_USERNAME: sa
      KC_DB_PASSWORD: Password123!
      KC_HOSTNAME: localhost
      KC_PROXY: edge
      KC_HTTP_RELATIVE_PATH: /auth
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_TRACING_ENDPOINT: http://otel-collector:4318
      KC_TRACING_PROTOCOL: http/protobuf
      KC_LOG: console,file
      KC_LOG_CONSOLE_FORMAT: ts="%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX}" level="%p" logger="%c" thread="%t" thread_id="%t{id}" msg="%s"%n
      KC_LOG_FILE_FORMAT: ts="%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX}" level="%p" logger="%c" thread="%t" thread_id="%t{id}" msg="%s"%n
    volumes:
      - ./.logs/keycloak:/opt/keycloak/data/log
    depends_on:
      mssql-tools:
        condition: service_completed_successfully

  mssql:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: mssql
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "Password123!"
      ACCEPT_EULA: "Y"
    healthcheck:
        test: /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P Password123! -C -Q "SELECT 1" || exit 1
        interval: 10s
        timeout: 10s
        retries: 5
    volumes:
      - mssql-data:/var/opt/mssql

  mssql-tools:
    image: mcr.microsoft.com/mssql-tools
    container_name: mssql-tools
    environment:
      DB_USERNAME: sa
      DB_PASSWORD: Password123!
    command: >
      sh -c "echo 'Creating database' &&
        until /opt/mssql-tools/bin/sqlcmd -S mssql -U sa -P Password123! -C -Q 'CREATE DATABASE keycloak'; do sleep 1; done &&
        echo 'Database created' &&
        exit 0"
    tty: true
    depends_on:
      mssql:
        condition: service_healthy

  # OpenTelemetry Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.88.0
    container_name: otel-collector
    volumes:
      - ./otel-config.yaml:/etc/otel/config.yaml
      - ./.data/log:/log/otel
    command: --config /etc/otel/config.yaml
    environment:
      TEMPO_ENDPOINT: "tempo:4317"
      LOKI_ENDPOINT: "http://loki:3100/loki/api/v1/push"
    ports:
      - "8889:8889"   # Prometheus metrics exporter (scrape endpoint)
      - "13133:13133" # health_check extension
      - "55679:55679" # ZPages extension
      - "4318:4318"   # OTEL http
    depends_on:
      - tempo
      - prometheus
      - loki
      - fluent-bit

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - ./.data/tempo:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin

  prometheus:
    image: prom/prometheus:v2.42.0
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  loki:
    image: grafana/loki:2.7.4
    container_name: loki
    ports:
      - "3100:3100"

  grafana:
    image: grafana/grafana:9.4.3
    container_name: grafana
    volumes:
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      GF_FEATURE_TOGGLES_ENABLE: traceqlEditor
    ports:
      - "3000:3000"

  fluent-bit:
    image: fluent/fluent-bit
    container_name: fluent-bit
    volumes:
      - ./fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
      - ./parsers.conf:/fluent-bit/etc/parsers.conf
      - ./.logs:/var/log/containers

volumes:
  mssql-data: